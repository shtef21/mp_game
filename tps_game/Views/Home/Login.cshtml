@{
    Layout = null;

    string username = "";
    string password = "";
    if (Context.Request.Host.Host == "localhost")
    {
        username = tps_game.Properties.Resources.exampleUser;
        password = tps_game.Properties.Resources.examplePassword;
    }
}

<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home Page - tps_game</title>

    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Font awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" integrity="sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />

</head>
<body>

    <section class="bg-gray-50">
        <div class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0">
            <div class="w-full bg-white rounded-lg shadow md:mt-0 sm:max-w-md xl:p-0">
                <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
                    <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl">
                        Sign in
                    </h1>
                    <div class="space-y-4 md:space-y-6" action="#">
                        <div>
                            <label for="username" class="block mb-2 text-sm font-medium text-gray-900">Username</label>
                            <input type="text" name="username" id="username_i" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5" placeholder="Username" required=""
                                value="@username">
                        </div>
                        <div>
                            <label for="password" class="block mb-2 text-sm font-medium text-gray-900">Password</label>
                            <input type="password" name="password" id="password_i" placeholder="••••••••" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5" required=""
                                value="@password">
                        </div>
                        <div class="flex items-center justify-between">
                            <div class="flex items-start">
                                <div class="flex items-center h-5">
                                    <input id="remember_i" aria-describedby="remember" type="checkbox" class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300" required="">
                                </div>
                                <div class="ml-3 text-sm">
                                    <label for="remember" class="text-gray-500">Remember me</label>
                                </div>
                            </div>
                            @*<a href="#" class="text-sm font-medium text-blue-600 hover:underline">Forgot password?</a>*@
                        </div>
                        <button id="login_b" onclick="login()" class="w-full text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                            Sign in
                        </button>

                        @*<p class="text-sm font-light text-gray-500">
                        Don’t have an account yet? <a href="#" class="font-medium text-blue-600 hover:underline">Sign up</a>
                        </p>*@
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>

        async function login() {
            login_b.disabled = true;

            let username = username_i.value;
            let password = password_i.value;

            let response = await fetch('/user/login', {
                method: 'POST',
                body: JSON.stringify({
                    username: username,
                    password: password
                })
            }).then(res => res.text());

            if (response[0] == 'N') {
                alert('Login error code: ' + response.substring(2));
            }
            else {
                // Handle cookie expiration
                let expiresTime = 60 * 60 * 1000; // Expires in 1h
                if (remember_i.checked) {
                    expiresTime = 7 * 24 * 60 * 60 * 1000; // Expires in 7d
                }

                // Calculate expiration time
                let expires = new Date();
                expires.setTime(expires.getTime() + expiresTime);

                // Set cookie
                document.cookie = 'token=' + response + '; expires=' + expires.toUTCString() + "; path=/";

                // Save cookie to session
                sessionStorage.setItem('token', response);
                sessionStorage.setItem('username', username);

                // Open home page
                window.open('/', '_self');
            }
            login_b.disabled = false;
        }
    </script>

</body>
</html>
